functions -> function functions1
functions1 -> @
functions1 -> functions
function -> ret ID ( ) { states }
ret -> VOID
ret -> INT
ret -> FLOAT
ret -> DOUBLE
states -> state states1
states1 -> @
states1 -> states
state -> init ;
state -> RETURN RTYPE ;
RTYPE -> @
RTYPE -> ID
RTYPE -> INTEGER
RTYPE -> FLOAT_NUM
RTYPE -> DOUBLE
TYPE -> INT
TYPE -> FLOAT
TYPE -> DOUBLE
init -> TYPE ID init1
init1 -> @
init1 -> = init2
init2 -> arithmetic
operand -> ID
operand -> INTEGER
operand -> FLOAT_NUM
arithmetic -> operand arithmetic1
arithmetic1 -> @
arithmetic1 -> op operand
op -> +
op -> -
op -> *
op -> /
op -> >
op -> <
state -> assign ;
assign -> ID = assign1
assign1 -> arithmetic
state -> IF ( arithmetic ) { states } ELSE { states }
state -> while
while -> WHILE ( arithmetic ) { states }